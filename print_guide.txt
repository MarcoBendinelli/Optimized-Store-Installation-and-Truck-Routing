For printing the plots insert these snippet of code in the following lines:


-------- Line 47 -----------

# red = depot, green = usable sites, blue = non usable sites
fig = plt.figure()
fig.set_size_inches(12, 8)
fig.set_dpi(200)
plot = fig.add_subplot()
plot.plot(coordX.get(1), coordY.get(1), c='r', marker='s')  # depot

usableCX = dict()
usableCY = dict()
nonUsableCX = dict()
nonUsableCY = dict()

for i in range(2, n + 1):
    if usable.get(i) == 1:
        usableCX.update({i: coordX.get(i)})
        usableCY.update({i: coordY.get(i)})
    else:
        nonUsableCX.update({i: coordX.get(i)})
        nonUsableCY.update({i: coordY.get(i)})

plot.scatter(list(usableCX.values()), list(usableCY.values()), c='g')
plot.scatter(list(nonUsableCX.values()), list(nonUsableCY.values()), c='b')
plot.scatter([c[0] for c in storesCoords.values()], [c[1] for c in storesCoords.values()], c='g', marker='s', s=100)
for c in storesCoords:
    plot.add_artist(plt.Circle(storesCoords.get(c), rng, color='g', fill=False, linewidth=0.1))
    plot.annotate(c, storesCoords.get(c))
plt.show()



--------- Line 108 ---------------

colors = iter(cm.rainbow(np.linspace(0, 1, len(routes))))
for route in routes:
    color = next(colors)
    for i, j in zip(route, route[1:]):
        x_val = [storesCoords.get(i)[0], storesCoords.get(j)[0]]
        y_val = [storesCoords.get(i)[1], storesCoords.get(j)[1]]
        plot.plot(x_val, y_val, lw=1, color=color)

plt.show()